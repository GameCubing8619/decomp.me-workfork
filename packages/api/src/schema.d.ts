/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/compilers": {
    get: operations["compilers_retrieve"];
  };
  "/projects": {
    get: operations["projects_list"];
    post: operations["projects_create"];
  };
  "/projects/{parent_lookup_slug}/functions": {
    get: operations["projects_functions_list"];
  };
  "/projects/{parent_lookup_slug}/functions/{id}": {
    get: operations["projects_functions_retrieve"];
  };
  "/projects/{parent_lookup_slug}/functions/{id}/attempts": {
    get: operations["projects_functions_attempts_retrieve"];
    post: operations["projects_functions_attempts_create"];
  };
  "/projects/{parent_lookup_slug}/members": {
    get: operations["projects_members_list"];
    post: operations["projects_members_create"];
  };
  "/projects/{parent_lookup_slug}/members/{id}": {
    get: operations["projects_members_retrieve"];
    delete: operations["projects_members_destroy"];
  };
  "/projects/{slug}": {
    get: operations["projects_retrieve"];
    put: operations["projects_update"];
    delete: operations["projects_destroy"];
    patch: operations["projects_partial_update"];
  };
  "/projects/{slug}/pr": {
    post: operations["projects_pr_create"];
  };
  "/projects/{slug}/pull": {
    post: operations["projects_pull_create"];
  };
  "/scratch": {
    get: operations["scratch_list"];
    post: operations["scratch_create"];
  };
  "/scratch/{slug}": {
    get: operations["scratch_retrieve"];
    put: operations["scratch_update"];
    delete: operations["scratch_destroy"];
    patch: operations["scratch_partial_update"];
  };
  "/scratch/{slug}/claim": {
    post: operations["scratch_claim_create"];
  };
  "/scratch/{slug}/compile": {
    get: operations["scratch_compile_retrieve"];
    post: operations["scratch_compile_create"];
  };
  "/scratch/{slug}/decompile": {
    post: operations["scratch_decompile_create"];
  };
  "/scratch/{slug}/export": {
    get: operations["scratch_export_retrieve"];
  };
  "/scratch/{slug}/family": {
    get: operations["scratch_family_retrieve"];
  };
  "/scratch/{slug}/fork": {
    post: operations["scratch_fork_create"];
  };
  "/stats": {
    get: operations["stats_retrieve"];
  };
  "/user": {
    /** @description View to access the current user profile. */
    get: operations["user_retrieve"];
    /** @description Login if the 'code' parameter is provided. Log out otherwise. */
    post: operations["user_create"];
  };
  "/user/scratches": {
    /** @description Gets the current user's scratches */
    get: operations["user_scratches_list"];
  };
  "/users/{username}": {
    /** @description Gets a user's basic data */
    get: operations["users_retrieve"];
  };
  "/users/{username}/scratches": {
    /** @description Gets a user's scratches */
    get: operations["users_scratches_list"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    GitHubRepo: {
      /** Format: uri */
      html_url: string;
      owner: string;
      repo: string;
      branch?: string;
      is_pulling: boolean;
      /** Format: date-time */
      last_pulled: string | null;
    };
    PaginatedProjectFunctionList: {
      next?: string | null;
      previous?: string | null;
      results?: (components["schemas"]["ProjectFunction"])[];
    };
    PaginatedProjectList: {
      next?: string | null;
      previous?: string | null;
      results?: (components["schemas"]["Project"])[];
    };
    PaginatedTerseScratchList: {
      next?: string | null;
      previous?: string | null;
      results?: (components["schemas"]["TerseScratch"])[];
    };
    PatchedProject: {
      slug?: string;
      /** Format: uri */
      url?: string;
      /** Format: uri */
      html_url?: string;
      repo?: components["schemas"]["GitHubRepo"];
      platform?: string | null;
      unmatched_function_count?: number;
      /** Format: date-time */
      creation_time?: string;
      /** Format: uri */
      icon?: string | null;
      description?: string;
    };
    PatchedScratch: {
      /** Format: uri */
      url?: string;
      slug?: string;
      /** Format: uri */
      html_url?: string;
      /** Format: uri */
      parent?: string;
      owner?: string;
      source_code?: string;
      context?: string;
      project?: string | null;
      project_function?: string | null;
      name?: string;
      description?: string;
      /** Format: date-time */
      creation_time?: string;
      /** Format: date-time */
      last_updated?: string;
      compiler?: string;
      platform?: string;
      compiler_flags?: string;
      diff_flags?: {
        [key: string]: unknown;
      };
      preset?: string | null;
      diff_label?: string;
      score?: number;
      max_score?: number;
    };
    Project: {
      slug: string;
      /** Format: uri */
      url: string;
      /** Format: uri */
      html_url: string;
      repo: components["schemas"]["GitHubRepo"];
      platform: string | null;
      unmatched_function_count: number;
      /** Format: date-time */
      creation_time: string;
      /** Format: uri */
      icon?: string | null;
      description?: string;
    };
    ProjectFunction: {
      url: string;
      /** Format: uri */
      html_url: string;
      /** Format: uri */
      project: string;
      attempts_count: number;
      rom_address: number;
      /** Format: date-time */
      creation_time: string;
      display_name: string;
      is_matched_in_repo?: boolean;
      src_file: string;
      asm_file: string;
    };
    ProjectMember: {
      /** Format: uri */
      url: string;
      /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
      username: string;
    };
    Scratch: {
      /** Format: uri */
      url: string;
      slug: string;
      /** Format: uri */
      html_url: string;
      /** Format: uri */
      parent: string;
      owner: string;
      source_code: string;
      context: string;
      project: string | null;
      project_function: string | null;
      name?: string;
      description?: string;
      /** Format: date-time */
      creation_time: string;
      /** Format: date-time */
      last_updated: string;
      compiler: string;
      platform: string;
      compiler_flags?: string;
      diff_flags?: {
        [key: string]: unknown;
      };
      preset?: string | null;
      diff_label?: string;
      score?: number;
      max_score?: number;
    };
    TerseScratch: {
      /** Format: uri */
      url: string;
      /** Format: uri */
      html_url: string;
      slug: string;
      owner: string;
      /** Format: date-time */
      last_updated: string;
      /** Format: date-time */
      creation_time: string;
      platform?: string;
      compiler: string;
      name?: string;
      score?: number;
      max_score?: number;
      project: string | null;
      project_function: string | null;
      /** Format: uri */
      parent: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  compilers_retrieve: {
    responses: {
      /** @description No response body */
      200: never;
    };
  };
  projects_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedProjectList"];
        };
      };
    };
  };
  projects_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  projects_functions_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string;
        /** @description Number of results to return per page. */
        page_size?: number;
        /** @description A search term. */
        search?: string;
      };
      path: {
        parent_lookup_slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedProjectFunctionList"];
        };
      };
    };
  };
  projects_functions_retrieve: {
    parameters: {
      path: {
        id: string;
        parent_lookup_slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ProjectFunction"];
        };
      };
    };
  };
  projects_functions_attempts_retrieve: {
    parameters: {
      path: {
        id: string;
        parent_lookup_slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ProjectFunction"];
        };
      };
    };
  };
  projects_functions_attempts_create: {
    parameters: {
      path: {
        id: string;
        parent_lookup_slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectFunction"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjectFunction"];
        "multipart/form-data": components["schemas"]["ProjectFunction"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ProjectFunction"];
        };
      };
    };
  };
  projects_members_list: {
    parameters: {
      path: {
        parent_lookup_slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": (components["schemas"]["ProjectMember"])[];
        };
      };
    };
  };
  projects_members_create: {
    parameters: {
      path: {
        parent_lookup_slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectMember"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjectMember"];
        "multipart/form-data": components["schemas"]["ProjectMember"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["ProjectMember"];
        };
      };
    };
  };
  projects_members_retrieve: {
    parameters: {
      path: {
        id: string;
        parent_lookup_slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ProjectMember"];
        };
      };
    };
  };
  projects_members_destroy: {
    parameters: {
      path: {
        id: string;
        parent_lookup_slug: string;
      };
    };
    responses: {
      /** @description No response body */
      204: never;
    };
  };
  projects_retrieve: {
    parameters: {
      path: {
        /** @description A unique value identifying this project. */
        slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  projects_update: {
    parameters: {
      path: {
        /** @description A unique value identifying this project. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  projects_destroy: {
    parameters: {
      path: {
        /** @description A unique value identifying this project. */
        slug: string;
      };
    };
    responses: {
      /** @description No response body */
      204: never;
    };
  };
  projects_partial_update: {
    parameters: {
      path: {
        /** @description A unique value identifying this project. */
        slug: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedProject"];
        "multipart/form-data": components["schemas"]["PatchedProject"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  projects_pr_create: {
    parameters: {
      path: {
        /** @description A unique value identifying this project. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  projects_pull_create: {
    parameters: {
      path: {
        /** @description A unique value identifying this project. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  scratch_list: {
    parameters: {
      query?: {
        compiler?: string;
        /** @description The pagination cursor value. */
        cursor?: string;
        /** @description Number of results to return per page. */
        page_size?: number;
        platform?: string;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedTerseScratchList"];
        };
      };
    };
  };
  scratch_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Scratch"];
        "application/x-www-form-urlencoded": components["schemas"]["Scratch"];
        "multipart/form-data": components["schemas"]["Scratch"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_retrieve: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_update: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Scratch"];
        "application/x-www-form-urlencoded": components["schemas"]["Scratch"];
        "multipart/form-data": components["schemas"]["Scratch"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_destroy: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    responses: {
      /** @description No response body */
      204: never;
    };
  };
  scratch_partial_update: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedScratch"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedScratch"];
        "multipart/form-data": components["schemas"]["PatchedScratch"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_claim_create: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Scratch"];
        "application/x-www-form-urlencoded": components["schemas"]["Scratch"];
        "multipart/form-data": components["schemas"]["Scratch"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_compile_retrieve: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_compile_create: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Scratch"];
        "application/x-www-form-urlencoded": components["schemas"]["Scratch"];
        "multipart/form-data": components["schemas"]["Scratch"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_decompile_create: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Scratch"];
        "application/x-www-form-urlencoded": components["schemas"]["Scratch"];
        "multipart/form-data": components["schemas"]["Scratch"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_export_retrieve: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_family_retrieve: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  scratch_fork_create: {
    parameters: {
      path: {
        /** @description A unique value identifying this scratch. */
        slug: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Scratch"];
        "application/x-www-form-urlencoded": components["schemas"]["Scratch"];
        "multipart/form-data": components["schemas"]["Scratch"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Scratch"];
        };
      };
    };
  };
  stats_retrieve: {
    responses: {
      /** @description No response body */
      200: never;
    };
  };
  /** @description View to access the current user profile. */
  user_retrieve: {
    responses: {
      /** @description No response body */
      200: never;
    };
  };
  /** @description Login if the 'code' parameter is provided. Log out otherwise. */
  user_create: {
    responses: {
      /** @description No response body */
      200: never;
    };
  };
  /** @description Gets the current user's scratches */
  user_scratches_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedTerseScratchList"];
        };
      };
    };
  };
  /** @description Gets a user's basic data */
  users_retrieve: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description No response body */
      200: never;
    };
  };
  /** @description Gets a user's scratches */
  users_scratches_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      path: {
        username: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedTerseScratchList"];
        };
      };
    };
  };
}
